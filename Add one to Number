/*
Add One To Number
Problem Description

Given a non-negative number represented as an array of digits, add 1 to the number ( increment the number represented by the digits ).

The digits are stored such that the most significant digit is at the head of the list.

NOTE: Certain things are intentionally left unclear in this question which you should practice asking the interviewer. For example: for this problem, following are some good questions to ask :

Q : Can the input have 0's before the most significant digit. Or in other words, is 0 1 2 3 a valid input?
A : For the purpose of this question, YES
Q : Can the output have 0's before the most significant digit? Or in other words, is 0 1 2 4 a valid output?
A : For the purpose of this question, NO. Even if the input has zeroes before the most significant digit.


Problem Constraints
1 <= size of the array <= 1000000



Input Format
First argument is an array of digits.



Output Format
Return the array of digits after adding one.



Example Input
Input 1:

[1, 2, 3]


Example Output
Output 1:

[1, 2, 4]


Example Explanation
Explanation 1:

Given vector is [1, 2, 3].
The returned vector should be [1, 2, 4] as 123 + 1 = 124.


*/package com;

public class Solution {
    public static int[] plusOne(int[] A) {
        
        String str ="0";
        int i=0;
        if(A.length ==1 && A[0]< 9)
        {    A[0] += 1;
            return A;
        
        }
        
        for ( i =0;i<A.length;i++){
          if(A[i] == 0 && Integer.parseInt(str) == 0){
            str=str+"0";
          }
          else
              break;
          
          
        }
      //  System.out.println(str.length());
        int zeroLength = str.length()-1;
        
        int carry =0;
        for (i = A.length -1;i>=A.length - (A.length -zeroLength);i--){
          if (i == A.length -1)
              A[i] = A[i]+1;
           else
               A[i] += carry;
            if(A[i] == 10){
              A[i] = 0;
              carry =1;
            
           
            }
            else 
                carry =0;
    //        System.out.println(i+".."+A[i]+" carry"+carry);    
        }
        int finalArrLength=0;
        if (carry ==0 && zeroLength == 0)
            return A;
  //      System.out.println(carry +" carry");
         
        finalArrLength = A.length - zeroLength + carry;
        int[] B = new int[finalArrLength];
//System.out.println(B.length);
int j=0;
        for(i =0;i<B.length ;i++){
          if (carry ==1){
            B[0]=1;
            j=1;
            
          }
          else{          
              B[i] = A[i+zeroLength-j];
              
             }
             //carry=0;
          //    System.out.println(i+".."+B[i]);

        }
        
        return B;
        
        
        }



  public static void main(String[] args) {
        int[] A={0};//{0,0,0,0,0, 1, 1, 1, 3, 2, 1, 1, 2, 5, 9, 6, 5};//{0,0,0,0,9,9,9};////{0,0,0,0,00,0,1,2,3,4};//{9,9,9};//{1,2}
      int[] B= plusOne(A);
        for (int i =0;i<B.length;i++){
          System.out.println(B[i]);
        }
        //System.out.println((solve(A)));
  }

}
